/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.batch.protocol.models;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Specifies characteristics for a temporary 'auto pool'. The Batch service
 * will create this auto pool when the job is submitted.
 */
public class AutoPoolSpecification {
    /**
     * A prefix to be added to the unique identifier when a pool is
     * automatically created.
     * The Batch service assigns each auto pool a unique identifier on
     * creation. To distinguish between pools created for different purposes,
     * you can specify this element to add a prefix to the ID that is assigned.
     * The prefix can be up to 20 characters long.
     */
    @JsonProperty(value = "autoPoolIdPrefix")
    private String autoPoolIdPrefix;

    /**
     * The minimum lifetime of created auto pools, and how multiple jobs on a
     * schedule are assigned to pools.
     * When the pool lifetime is jobSchedule the pool exists for the lifetime
     * of the job schedule. The Batch Service creates the pool when it creates
     * the first job on the schedule. You may apply this option only to job
     * schedules, not to jobs. When the pool lifetime is job the pool exists
     * for the lifetime of the job to which it is dedicated. The Batch service
     * creates the pool when it creates the job. If the 'job' option is applied
     * to a job schedule, the Batch service creates a new auto pool for every
     * job created on the schedule. Possible values include: 'jobSchedule',
     * 'job'.
     */
    @JsonProperty(value = "poolLifetimeOption", required = true)
    private PoolLifetimeOption poolLifetimeOption;

    /**
     * Whether to keep an auto pool alive after its lifetime expires.
     * If false, the Batch service deletes the pool once its lifetime (as
     * determined by the poolLifetimeOption setting) expires; that is, when the
     * job or job schedule completes. If true, the Batch service does not
     * delete the pool automatically. It is up to the user to delete auto pools
     * created with this option.
     */
    @JsonProperty(value = "keepAlive")
    private Boolean keepAlive;

    /**
     * The pool specification for the auto pool.
     */
    @JsonProperty(value = "pool")
    private PoolSpecification pool;

    /**
     * Get the autoPoolIdPrefix value.
     *
     * @return the autoPoolIdPrefix value
     */
    public String autoPoolIdPrefix() {
        return this.autoPoolIdPrefix;
    }

    /**
     * Set the autoPoolIdPrefix value.
     *
     * @param autoPoolIdPrefix the autoPoolIdPrefix value to set
     * @return the AutoPoolSpecification object itself.
     */
    public AutoPoolSpecification withAutoPoolIdPrefix(String autoPoolIdPrefix) {
        this.autoPoolIdPrefix = autoPoolIdPrefix;
        return this;
    }

    /**
     * Get the poolLifetimeOption value.
     *
     * @return the poolLifetimeOption value
     */
    public PoolLifetimeOption poolLifetimeOption() {
        return this.poolLifetimeOption;
    }

    /**
     * Set the poolLifetimeOption value.
     *
     * @param poolLifetimeOption the poolLifetimeOption value to set
     * @return the AutoPoolSpecification object itself.
     */
    public AutoPoolSpecification withPoolLifetimeOption(PoolLifetimeOption poolLifetimeOption) {
        this.poolLifetimeOption = poolLifetimeOption;
        return this;
    }

    /**
     * Get the keepAlive value.
     *
     * @return the keepAlive value
     */
    public Boolean keepAlive() {
        return this.keepAlive;
    }

    /**
     * Set the keepAlive value.
     *
     * @param keepAlive the keepAlive value to set
     * @return the AutoPoolSpecification object itself.
     */
    public AutoPoolSpecification withKeepAlive(Boolean keepAlive) {
        this.keepAlive = keepAlive;
        return this;
    }

    /**
     * Get the pool value.
     *
     * @return the pool value
     */
    public PoolSpecification pool() {
        return this.pool;
    }

    /**
     * Set the pool value.
     *
     * @param pool the pool value to set
     * @return the AutoPoolSpecification object itself.
     */
    public AutoPoolSpecification withPool(PoolSpecification pool) {
        this.pool = pool;
        return this;
    }

}
